/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package morrow.servlet;

import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.servlet.ServletHandler;
import org.junit.jupiter.api.Test;

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

import static org.junit.jupiter.api.Assertions.assertEquals;

class MorrowServletTest {
    @Test
    void visitMissingEndpoint() throws Exception {
        var port = 62117;
        Server server = new Server(port);
        ServletHandler servletHandler = new ServletHandler();
        servletHandler.addServletWithMapping(MorrowServlet.class, "/*");
        server.setHandler(servletHandler);
        server.start();

        HttpClient client = HttpClient.newHttpClient();
        var request = HttpRequest.newBuilder()
                .uri(URI.create("http://localhost:%d/missing".formatted(port)))
                .header("Accept", "application/json")
                .GET()
                .build();
        HttpResponse<String> httpResponse = client.send(request, HttpResponse.BodyHandlers.ofString());
        assertEquals("{\"status\": \"not found\"}", httpResponse.body());


    }

    @Test
    void visitExistingEndpoint() throws Exception {
        var port = 62118;
        Server server = new Server(port);
        ServletHandler servletHandler = new ServletHandler();
        servletHandler.addServletWithMapping(MorrowServlet.class, "/*");
        server.setHandler(servletHandler);
        server.start();

        HttpClient client = HttpClient.newHttpClient();
        var request = HttpRequest.newBuilder()
                .uri(URI.create("http://localhost:%d/vehicles/cars".formatted(port)))
                .header("Accept", "application/json")
                .GET()
                .build();
        HttpResponse<String> httpResponse = client.send(request, HttpResponse.BodyHandlers.ofString());
        assertEquals("{\"status\": \"ok\"}", httpResponse.body());


    }


//
//
//    public static void main(String[] args) {
//        try {
//            var mapper = new ObjectMapper(new YAMLFactory());
//
//            var is = ViewLoader.class.getClassLoader().getResourceAsStream("views.yml");
//            var value = mapper.readValue(is, new TypeReference<Map<String, Map<String, Map<String, List<UseCase2>>>>>() {
////            var value = mapper.readValue(is, new TypeReference<UseCase2>() {
//            });
//            System.out.println(value);
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//
//    }
//
//
//    public record UseCase2(@JsonProperty("model-class") String modelClass, String renderer) {}
//
//    @JsonNaming(PropertyNamingStrategies.KebabCaseStrategy.class)
//    public static class UseCase {
//        String modelClass;
//        String renderer;
//
//
//        public String getModelClass() {
//            return modelClass;
//        }
//
//        public void setModelClass(String modelClass) {
//            this.modelClass = modelClass;
//        }
//
//        public String getRenderer() {
//            return renderer;
//        }
//
//        public void setRenderer(String renderer) {
//            this.renderer = renderer;
//        }
//    }
}
