/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}

group = 'org.morrow'
version = '0.1.0'



ext {
    jettyVersion = "11.0.11"
}

// https://docs.gradle.org/current/userguide/publishing_setup.html
publishing {
    publications {
        myLibrary(MavenPublication) {
            from components.java
        }
    }

    repositories {
        /* TODO:
            The example also defines a file-based Maven repository with the name "myRepo".
            Such a file-based repository is convenient for a sample, but real-world builds typically work with
            HTTPS-based repository servers, such as Maven Central or an internal company server.
         */
        maven {
            name = 'myRepo'
            url = layout.buildDirectory.dir("repo")
        }
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    api 'org.tinylog:tinylog-api:2.3.2'

    implementation 'org.yaml:snakeyaml:1.26'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'org.tinylog:tinylog-impl:2.3.2'

    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'


    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    def jettyVersion = "11.0.11"
    testImplementation "org.eclipse.jetty:jetty-server:${jettyVersion}"
    testImplementation "org.eclipse.jetty:jetty-servlet:${jettyVersion}"



    /*

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    */
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
